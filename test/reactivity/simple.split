$$$good
${
(*
  run_test:
   [
    Good: "../../compiler/rpmlc.byte -I ../../lib/ -c -dwarn_error"
   ]
*)

$}


let process p = pause; pause; print_endline "Done"

$

let process p = loop pause end

$

let process p q = loop run q end

$

let rec process p = pause; run p

$

let rec process p =
  let process q = run p in
  ()

$$$bad
${
(*
  run_test:
   [
    Bad 2 "": "../../compiler/rpmlc.byte -I ../../lib/ -c -dwarn_error"
   ]
*)

$}

let process p =
  loop
    print_endline "Coucou"
  end

$$$good_unify
${
(*
  run_test:
   [
    Good: "../../compiler/rpmlc.byte -I ../../lib/ -c -dwarn_error -dno_clock_effects"
   ]
*)

$}

let process p = pause; print_endline "Coucou"
let process q = pause; print_endline "Bli" || pause

let process pp =
  let r = ref p in
  r := q;
  loop
    pause;
    run !r
  end


$$$bad_unify
${
(*
  run_test:
   [
    Bad 2 "": "../../compiler/rpmlc.byte -I ../../lib/ -c -dwarn_error -dno_clock_effects"
   ]
*)

$}

let process p = pause; print_endline "Coucou"
let process q = pause; print_endline "Bli" || pause

let process pp =
  let r = ref p in
  r := q;
  loop
    run !r
  end