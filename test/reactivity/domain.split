$$$good
${
(*
  run_test:
   [
    Good: "../../compiler/rpmlc.byte -I ../../lib/ -c -dwarn_error -dno_clock_effects"
   ]
*)

$}

let process q =
  domain ck do
    loop
      pause topck
    end
  done

$


let process q =
  domain ck do
    domain ck2 do
      loop
        pause topck
      end
    done
  done

$

let process p =
  domain ck do
    signal s clock topck in
    loop
      emit s 0;
      await s(v) in
      ignore v
    end
  done


$

let process p =
  domain ck do
    signal s clock topck in
    loop
      emit s 0;
      await s(v) in
      ignore v
    end
    ||
    loop
      pause topck
    end
    ||
    domain ck2 do
      loop
        pause ck;
        pause topck
      end
    done
  done

$

let process p (q: 'ck. unit process{'ck|'ck}) =
  domain ck do
    run q
  done

let process q = pause; pause

let process g = p q

$$$bad
${
(*
  run_test:
   [
    Bad 2 "domain": "../../compiler/rpmlc.byte -I ../../lib/ -c -dwarn_error"
   ]
*)

$}

let process q =
  domain ck do
    loop
      pause ck
    done
  done

$

let process p =
  domain ck do
    signal s in
    loop
      emit s 0;
      await s(v) in
      ignore v
    end
  done

$

let process hold s =
  await s;
  loop
    emit s; pause
  end

let process p =
  domain ck do
    signal s in
    run hold s
    ||
    pause ck; emit s
  done