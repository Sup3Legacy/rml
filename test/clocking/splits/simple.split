$$$good
${
(*
  run_test:
   [
    Good: "../../compiler/rpmlc.byte -I ../../lib/ -c"
   ]
*)

type req = Ok | Not_ok of int

$}
let f x = x + 3

$
let g () =
    let f x = x + 1 in
    f (f 0)

$
let h x = match x with
| Ok -> 0
| Not_ok i -> i

$

let f () =
  let id x = x in
  (id 4, id true)



$$$bad
${
(*
  run_test:
   [
     Bad 2 "": "../../compiler/rpmlc.byte -I ../../lib/ -c"
   ]
*)

$}

let f ()
  let r = ref [] in
  r := [3];
  r := [true]