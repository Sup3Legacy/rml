open Position
open Global
open Node
open Draw  



let rec process make_nodes n =
  if n > 0 then
    let pos = { x = Random.int max_x;
		y = Random.int max_y } 
    in
    run (node pos (Move.random_waypoint 200 pos) Msg.make)
    ||
    run (make_nodes (n-1))


let process main =
(*  Random.init 1; *)
  Random.self_init ();
  run Area.make_areas;
  signal suspend in
  control
    run (make_nodes nb_nodes)
  with suspend done
  ||
  (if with_graphics then
    run (draw_simul draw suspend))
  ||
  if nb_instants > 0 then
    begin
      let t_init = Unix.time () in
      for i = 1 to nb_instants * 3 do pause done;
      let t_fin = Unix.time () in
      let proc_time = Sys.time() in
      let gc_stat = Gc.stat() in
      print_int nb_nodes;
      print_char '\t';
      print_int max_x;
      print_char '\t';
      print_int coverage_range;
      print_char '\t';
      print_int area_size_x;
      print_char '\t';
      print_float (t_fin -. t_init);
      print_char '\t';
      print_float proc_time;
      print_char '\t';
      print_int gc_stat.Gc.top_heap_words;
      print_char '\t';
      print_float ((t_fin -. t_init) /. float_of_int nb_instants);
      print_char '\t';
      print_float (proc_time /. float_of_int nb_instants);
      print_char '\t';
      print_newline();
(*      Gc.print_stat stdout;*)
      exit 0;
    end
