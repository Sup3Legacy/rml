open Moteur;;
open Rubik;;


(*  Interaction avec l'utilisateur *)

(******************************************************)
(* click de souris                                    *)
(******************************************************)

let rec process mouse_drag rotx roty rot_rubik r_dep =
     await one r_dep (p) in
     let rotx = mod_float (rotx +. (p.x /. 10.)) 6.28 in
     let roty = mod_float (roty +. (p.y /. 10.)) 6.28 in
     emit rot_rubik (rotx,roty);
     pause;
     run (mouse_drag rotx roty rot_rubik r_dep);;


(***************************************************)
(* Frappe du clavier                               *)
(***************************************************)

let rec process evenement_clavier key_push mvt_suiv mvt =
      loop 
       present key_push  then
         (await immediate one key_push (key) in
	  pause;
            let rot =(match key with 
                       | 'q' -> (X,(0, 1.) )
                       | 'Q' -> (X,(0,-1.) )
                       | 'w' -> (Y,(0, 1.) )
                       | 'W' -> (Y,(0,-1.) )
                       | 'e' -> (Z,(0, 1.) )
                       | 'E' -> (Z,(0,-1.) )

                       | 'a' -> (X,(1, 1.) )
                       | 'A' -> (X,(1,-1.) )
                       | 's' -> (Y,(1, 1.) )
                       | 'S' -> (Y,(1,-1.) )
                       | 'd' -> (Z,(1, 1.) )
                       | 'D' -> (Z,(1,-1.) )

                       | 'z' -> (X,(2, 1.) )
                       | 'Z' -> (X,(2,-1.) )
                       | 'x' -> (Y,(2, 1.) )
                       | 'X' -> (Y,(2,-1.) )
                       | 'c' -> (Z,(2, 1.) )
                       | 'C' -> (Z,(2,-1.) )
                       | _   -> (No,(0, 1.) )
                      ) in
               if fst rot = No then
                 emit mvt (No,(0, 1.))
               else
               (emit mvt (rot);
                await immediate mvt_suiv ;
               )
       )
       else
           emit mvt (No,(0,1.));
      end;;
(************************************************)










(******************************************************)
(* machine systeme []                                 *)
(******************************************************)
let process main =
  signal graph in
  signal rot_rubik in  (* pour la rotation du Rubik's Cube *)
  signal mvt in        (* mouvement a faire *)
  signal mvt_suiv in (* Present quand on a fini un mouvement *)
  signal click in
  signal clavier in
  signal a_move in
  run (fenetre click clavier graph a_move rot_rubik)
  ||
  run (evenement_clavier clavier mvt_suiv mvt)
  ||
  run (mouse_drag 0. 0. rot_rubik a_move)
  ||
  run (creer_rubik graph mvt_suiv mvt);;


Random.self_init ();;

(****************************************************************************)
