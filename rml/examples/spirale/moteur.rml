
type coord =
    { x : float;
      y : float; }


(********************************************)
(********************************************)
(*** Fonctions de manipulation de points  ***)
(********************************************)
(********************************************)

let center p max_x_2 max_y_2 =
  (int_of_float p.x + max_x_2,
   int_of_float p.y + max_y_2)


(********************************************)
(********************************************)
(*** Fonction graphique                   ***)
(********************************************)
(********************************************)

let get_key() = Graphics.read_key();;

let color_of_int = function
  | 0 -> Graphics.rgb   0   0   0  (* noir *)
  | 1 -> Graphics.rgb   0   0 192  (* blue *)
  | 2 -> Graphics.rgb   0 204   0  (* green *)
  | 3 -> Graphics.rgb 250 250 250  (*  white *)
  | 4 -> Graphics.rgb 150   0   0  (* bordeau *) 
  | 5 -> Graphics.rgb 255  89  65  (*  63   0   (* rose orange *)  *)
  | 6 -> Graphics.rgb 255 240   0  (* yellow *)
  | _ -> Graphics.rgb 128 128   0


let color = ref 0
let affiche_ligne max_x_2 max_y_2 (p1,p2) =
  incr color;
  Graphics.set_color (color_of_int (!color mod 7));
  let x1, y1 = center p1 max_x_2 max_y_2 
  and x2, y2 = center p2 max_x_2 max_y_2 in
  Graphics.moveto x1 y1;
  Graphics.lineto x2 y2


(******************************************************)
let fenetre =
  let process read_key key_push =
    loop 
      if Graphics.key_pressed() then emit key_push (get_key ());
      pause
    end
  in
  process key_push  p ->
(*----------------------------------------------------*)
    Graphics.open_graph "";
    Graphics.auto_synchronize false;
    let max_x_2 = (Graphics.size_x()) / 2 in
    let max_y_2 = (Graphics.size_y()) / 2 in
    loop
      await p (all) in
      Graphics.clear_graph();
      List.iter (affiche_ligne max_x_2 max_y_2) all;
      Graphics.synchronize();
    end
    ||
    run (read_key key_push)

