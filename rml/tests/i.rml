
let x = 1 in x;;
(*let x = 1 and x = 2;;*)

let id x = x ;;
let ab = id 1, id true in ab

(*let rec f x = x x*)

let process p {} =
  let id x = x in
  (id true, id 1)

let f = 1;;

let f x = f + x;;

type t = C of string

let process p {} =
  let a, b = 1, true
  and (c, C d) as e = (f, id), C "coucou"
  in 
  pause;
  (fst e, 
   (if b then a else (snd c) a), 
   print_string d)


let process p {} =
  let (a,b) as c = (1,2) in
  pause;
  fst c
