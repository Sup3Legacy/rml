type t = A | B

let f (x: int) = x + 1

let p = process {in s1, s3; out s2, s5; inout s4} -> 
  nothing; pause
  ||
  1+1

let process q {out e5} =
  signal e1,e2,e3,e4 in
  run p {s1=e1; s3=e3; s2=e2; s4=e4; s5=e5}
  ||
  pause; 
  let x = 1 and y, z = (true, 4) in
  if y then x else z
