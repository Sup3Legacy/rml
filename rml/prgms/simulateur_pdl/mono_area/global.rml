let dist_couv = 100
let dist_couv2 = dist_couv * dist_couv
let nb_node = 500
let maxx = 1000
let maxy = 1000

type dir_t =
  | Up
  | Down
  | Left
  | Right
  | Up_Left
  | Up_Right
  | Down_Left
  | Down_Right
 
let opposite dir =
  match dir with
  | Up -> Down
  | Down -> Up
  | Left -> Right
  | Right -> Left
  | Up_Left -> Down_Right
  | Up_Right -> Down_Left
  | Down_Left -> Up_Right
  | Down_Right -> Up_Left

type pos_tbl = (int * int * int) array (* posx * posy * age array *)

type node = 
    {  node_id: int;
       mutable node_posx: int;
       mutable node_posy: int;
       mutable node_last_direction: int;
       node_pos_tbl: pos_tbl;
   }

type packet =
    { packet_id_source: int;
      packet_id_destination: int;
      mutable packet_posx_dest: int;
      mutable packet_posy_dest: int;
      mutable packet_age_pos_dest: int;
      mutable packet_id_pdl: int;
      mutable packet_posx_pdl: int;
      mutable packet_posy_pdl: int;
   }

type info_hello =
    { info_id: int;
      info_posx: int;
      info_posy: int; }
