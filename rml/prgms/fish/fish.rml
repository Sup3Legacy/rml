(* draw a button *)
let draw (x1, y1, x2, y2) =
  ignore (x1 + y1 + x2 + y2);
  ()

let inside (x,y) (x1, y1, x2, y2) =
  (x1 <= x) & (x <= x2) & (y1 <= y) & (y <= y2)


let process button frame mevent oclick =
  draw frame;
  loop
    await mevent (pos) in
      if inside pos frame then emit oclick;
  end

let inside_fish (x1, y1)  (x2, y2) size =
  let size = size / 2 in
  (x2-size <= x1) & (x1 <= x2+size) & (y2-size <= y1) & (y1 <= y2+size)

let draw_fish_col col (x,y) size =
  Graphics.set_color col;
  Graphics.fill_rect (x - size/2) (y - size/2) size size

let draw_fish = draw_fish_col Graphics.black
let clear_fish = draw_fish_col Graphics.white

let law (x,y) border all = 
  (x + Random.int 7 - 3, y)

let process fish border init_pos size others mevent =
  (* start from an initial position *)
  signal kill in
  let pos = ref init_pos in
  do
    loop
      (* moves according to some law *)
      emit others (!pos);
      let others <o> in
      clear_fish !pos size;
      pos := law !pos border o;
      draw_fish !pos size;
    end
    ||
    loop
      await mevent (mouse_pos) in
      if inside_fish mouse_pos !pos size then emit kill;
    end
  until kill done;
  clear_fish !pos size

let random_pos (x1, y1, x2, y2) =
  (Random.int (x2-x1) + x1, Random.int (y2-y1) + y1)


let rec process shoal frame add others mevent = 
  await add; 
  (* the initial position is taken randomly *)
  let init_pos = random_pos frame in
  run (fish frame init_pos ((Random.int 10)+1) others mevent)
  ||
  run (shoal frame add others mevent)

let process aquarium (x_min,y_min,x_max,y_max) mevent = 
  let x_sep = x_min + (x_max-x_min) / 10 in
  (* compute the border for the water *)
  let shoal_frame = x_sep,y_min,x_max,y_max in
  (* compute the border for the create button *)
  let but_frame = x_min,y_min,x_sep,y_max in
  signal others, add in
  run (button but_frame mevent add)
  ||
  run (shoal shoal_frame add others mevent)

let process mouse click =
  loop 
    if Graphics.button_down() then emit click (Graphics.mouse_pos());
    pause
  end

let process main =
  Graphics.open_graph "";
  let border = (0, 0, Graphics.size_x(), Graphics.size_y()) in
  signal mevent default (0,0) gather fun x y -> x in
  run (mouse mevent)
  ||
  run (aquarium border mevent)
